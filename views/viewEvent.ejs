<%- include("partials/header_admin")  %>
<style>
    body{
        background-image: none;
        background-color: black;
        color: white;
    }
    
    nav{
        background-color: #417690;
        width: 100%;
    } 
</style>    
<div class="wrapper">
    <section class="add-section">
        <h1>
            collections
        </h1>
        <ul>
            <li class="db"> <span class="collections"><a href="/viewEvents">events</a></span>
                <div>
                    <a href="/addEvent">
                        <p>
                            <i class="fa-solid fa-plus"></i>
                            add
                        </p>
                    </a> 
                </div>
            </li>
            <li class="db"> <span class="collections"><a href="/admin/viewTestimonial">testimonials</a></span>
                <div>
                    <a href="/admin/addTestimonial">
                        <p>
                            <i class="fa-solid fa-plus"></i>
                            add
                        </p>
                    </a> 
                </div>
            </li>           
            <li class="db"> <span class="collections"><a href="/viewEmails">emails</a></span>
                <div>
                    <a href="/viewEmails">
                        <p>
                            view
                        </p>
                    </a> 
                </div>
            </li>
        </ul>
    </section>
        <!-- addEvent.ejs -->
    <section>
        <div class="viewEvents-head">
            <h1>view Event</h1>
            <div class="inner-viewevents-head">
                <span class="deleted-span">
                    deleted!
                </span>
                <a href="/addEvent">
                    <button >
                    add events
                    </button>
                </a>
            </div>

        </div>
        <div class="events-container">
            <ul class="">
                <% event.forEach(Event => { %>
                <div class="veiwEvent" >
                    <div>
                        <li class="events"><a href="/editEvents/<%= Event._id %>"><%= Event.title %> - <%= Event.date.toDateString() %></a></li>
                    </div>
                    <div class="deleted-button" data-event-id="<%= Event._id %>"><a href="/deleteEvents/<%= Event._id %>"><i class="fa-solid fa-trash"></i></a></div>
                </div>
                <% }); %>
            </ul>
        </div>
    </section>
</div>
<%- include("partials/adminFooter") %>
<script>
        //     document.getElementById('deleted-button').addEventListener('click', function(event) {
        //     // event.preventDefault(); // Prevent default form submission
            
        //     const eventId = this.dataset.eventId; // Get the event ID from data attribute
        //     console.log('Event ID:', eventId);
        //     // Example of using fetch to send a POST request to the server
        //     const show_message = document.querySelector(".deleted-span");
        
        //     function show() {
        //         show_message.classList.add("show-successfull");
        //     };
        
        //     function hide() {
        //         show_message.classList.remove("show-successfull");
        //     };
        
        //     fetch(`/deleteEvents/${eventId}`, {
        //         method: 'DELETE',
        //         // body: formData // Send FormData directly without JSON.stringify
        //     })
        //     .then(response => {
        //         console.log('ffjdojoe')
        //         if (response.ok) {
        //             setTimeout(show, 100);
        //             setTimeout(hide, 1000);
        //             // Clear input fields after successful submission
        //             // form.reset();
        //         } else {
        //             throw new Error('Failed to subscribe');
        //         }
        //     })
        //     .catch(error => {
        //         console.error('Error:', error);
        //         alert('Failed to subscribe: ' + error.message);
        //     });
            
        // })
        document.querySelectorAll('.deleted-button').forEach(button => {
        button.addEventListener('click', async function(event) {
        event.preventDefault(); // Prevent default action

        console.log('Fetch response:');
        const show_message = document.querySelector(".deleted-span");
        
        function show() {
            show_message.classList.add("show-successfull");
        };
    
        function hide() {
            show_message.classList.remove("show-successfull");
        };
        

        const eventId = this.dataset.eventId; // Get the event ID from data attribute
        console.log('Event ID:', eventId);

        try {
            const response = await fetch(`/deleteEvents/${eventId}`, {
                method: 'DELETE',
            });

            if (response.ok) {
                console.log('Event deleted successfully');
                setTimeout(() => {
                    show();
                    setTimeout(() => {
                        hide();
                        // Reload the page after a delay
                        setTimeout(() => {
                            window.location.reload();
                        }, 1000); // Adjust the delay as needed
                    }, 1000); // Adjust the delay as needed
                }, 100);
                // Optionally, perform any other actions after successful deletion
                // For example, update the UI or display a success message
            } else {
                console.error('Failed to delete event:', response.statusText);
                // Handle error or display error message to the user
            }
        } catch (error) {
            console.error('Error:', error.message);
            // Handle network error or display error message to the user
        }
        
    });
});

</script>
<!-- fetch(`/deleteEvents/${eventId}`, {
    method: 'DELETE',
})
.then(response => {
    console.log('Fetch response:', response);
    if (response.ok) {
        console.log('Event deleted successfully');
        setTimeout(show, 100);
        setTimeout(hide, 1000)
        // setTimeout(window.location.reload(),1001)
        // Perform any other actions after successful deletion
    } else {
        console.error('Failed to delete event');
        // Handle error or display error message to the user
    }
})
.catch(error => {
    console.error('Error:', error);
    // Handle network error or display error message to the user
}); -->